{"ast":null,"code":"const initState = {\n  items: [],\n  isActive: false\n};\nexport default function cart(state = initState, action) {\n  if (action.type === \"ADD_TO_CART\") {\n    return { ...state,\n      items: [...state.items, action.payload]\n    };\n  } else if (action.type === \"TOGGLE_CART\") {\n    return { ...state,\n      isActive: !state.isActive\n    };\n  } else if (action.type === \"REMOVE_FROM_CART\") {\n    return { ...state,\n      items: state.items.filter(item => item.title !== action.payload.title)\n    };\n  } else if (action.type === \"CLEAR_CART\") {\n    return { ...state,\n      items: []\n    };\n  }\n\n  return state;\n}","map":{"version":3,"sources":["/Users/roman/Desktop/Github/react-redux-shoes-store/src/redux/reducers/cart.js"],"names":["initState","items","isActive","cart","state","action","type","payload","filter","item","title"],"mappings":"AAAA,MAAMA,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE,EADS;AAEhBC,EAAAA,QAAQ,EAAE;AAFM,CAAlB;AAKA,eAAe,SAASC,IAAT,CAAcC,KAAK,GAAGJ,SAAtB,EAAiCK,MAAjC,EAAyC;AACtD,MAAIA,MAAM,CAACC,IAAP,KAAgB,aAApB,EAAmC;AACjC,WAAO,EACL,GAAGF,KADE;AAELH,MAAAA,KAAK,EAAE,CAAC,GAAGG,KAAK,CAACH,KAAV,EAAiBI,MAAM,CAACE,OAAxB;AAFF,KAAP;AAID,GALD,MAKO,IAAIF,MAAM,CAACC,IAAP,KAAgB,aAApB,EAAmC;AACxC,WAAO,EACL,GAAGF,KADE;AAELF,MAAAA,QAAQ,EAAE,CAACE,KAAK,CAACF;AAFZ,KAAP;AAID,GALM,MAKA,IAAIG,MAAM,CAACC,IAAP,KAAgB,kBAApB,EAAwC;AAC7C,WAAO,EACL,GAAGF,KADE;AAELH,MAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAoBC,IAAD,IAAUA,IAAI,CAACC,KAAL,KAAeL,MAAM,CAACE,OAAP,CAAeG,KAA3D;AAFF,KAAP;AAID,GALM,MAKA,IAAIL,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAkC;AACvC,WAAO,EACL,GAAGF,KADE;AAELH,MAAAA,KAAK,EAAE;AAFF,KAAP;AAID;;AACD,SAAOG,KAAP;AACD","sourcesContent":["const initState = {\n  items: [],\n  isActive: false,\n};\n\nexport default function cart(state = initState, action) {\n  if (action.type === \"ADD_TO_CART\") {\n    return {\n      ...state,\n      items: [...state.items, action.payload],\n    };\n  } else if (action.type === \"TOGGLE_CART\") {\n    return {\n      ...state,\n      isActive: !state.isActive,\n    };\n  } else if (action.type === \"REMOVE_FROM_CART\") {\n    return {\n      ...state,\n      items: state.items.filter((item) => item.title !== action.payload.title),\n    };\n  } else if (action.type === \"CLEAR_CART\") {\n    return {\n      ...state,\n      items: [],\n    };\n  }\n  return state;\n}\n"]},"metadata":{},"sourceType":"module"}